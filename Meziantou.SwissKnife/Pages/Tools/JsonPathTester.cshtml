@page
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@functions {
    public class Match
    {
        public string Path { get; set; }
        public string Text { get; set; }
    }

    public string Document { get; set; }
    public string Query { get; set; }
    public string Message { get; set; }
    public List<Match> Matches { get; set; }

    public IActionResult OnPost(string document, string query)
    {
        Document = document;
        Query = query;
        if (!string.IsNullOrEmpty(document) && !string.IsNullOrEmpty(query))
        {
            JObject o = null;
            try
            {
                o = JObject.Parse(document);
            }
            catch (JsonReaderException)
            {
                Message = "Invalid JSON";
            }

            if (o != null)
            {
                try
                {
                    var result = o.SelectTokens(query);
                    var matches = new List<Match>();
                    foreach (var item in result)
                    {
                        matches.Add(new Match
                        {
                            Path = item.Path,
                            Text = item.ToString(Formatting.Indented)
                        });
                    }
                    Matches = matches;
                }
                catch (JsonReaderException)
                {
                    Message = "Invalid Query";
                }
            }
        }
        return Page();
    }
}
<h1>JsonPath tester</h1>

<form method="post">
    <div class="form-group">
        <label>JSON</label>
        <textarea type="text" name="document" class="form-control">@Document</textarea>

        <label>Query</label>
        <input type="text" name="query" class="form-control" value="@Query" />
        <button type="submit" class="btn btn-primary">Evaluate</button>
    </div>
</form>

@if (!string.IsNullOrEmpty(Message))
{
<pre>@Message</pre>
}

@if (Matches != null)
{
    <ul class="result">
        @foreach (var match in Matches)
        {
            <li>
                <p>Path: @match.Path</p>
                <pre><code class="language-json">@match.Text</code></pre>
            </li>
        }
    </ul>
}

<style>
    .result {
        list-style: none;
        -webkit-padding-start: 0;
    }
</style>

@section Scripts {
    <link asp-append-version="true" href="~/lib/prismjs/prism.css" rel="stylesheet" />
    <script asp-append-version="true" src="~/lib/prismjs/prism.js"></script>
}